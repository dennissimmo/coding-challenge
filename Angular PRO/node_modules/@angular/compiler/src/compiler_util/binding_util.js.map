{"version":3,"file":"binding_util.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/compiler_util/binding_util.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAGI,KAAK,CAAC,MAAM,sBAAsB;AACzC;IACA;;;OAGG;IACH,2BAAmB,UAA0B,EACtC,SAAiB;QADL,eAAU,GAAV,UAAU,CAAgB;QACtC,cAAS,GAAT,SAAS,CAAQ;IAAG,CAAC;IAC5B,wBAAC;AAAD,CAAC,AAPD,IAOC;AAED;IACA,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,UAAU,CAAC;IACvC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC;AACtC,CAAC;AAED;;;GAGG;AACH,wCAAwC,OAAqB;IAC3D,IAAM,gBAAgB,CAAC,SAAS,GAAG,KAAG,OAAO,CAAC,MAAM,CAAC,MAAQ,CAAC;IAC9D,IAAM,gBAAgB,CAAC,SAAS,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC;IAClE,2EAA2E;IAC3E,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtF,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IAC5F,MAAM,CAAC,IAAI,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AACrD,CAAC;AACD;;;GAGG;AACH,6BAA6B,SAAiB;IAC5C,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,WAAS,SAAW,CAAC,CAAC;AAChD,CAAC;AACD;;;GAGG;AACH,iCAAiC,IAAkB;IACjD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC5C,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ClassBuilder} from '../output/class_builder';\nimport * as o from '../output/output_ast';\nexport class CheckBindingField {\n/**\n * @param {?} expression\n * @param {?} bindingId\n */\nconstructor(public expression: o.ReadPropExpr,\npublic bindingId: string) {}\n}\n\nfunction CheckBindingField_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckBindingField.prototype.expression;\n/** @type {?} */\nCheckBindingField.prototype.bindingId;\n}\n\n/**\n * @param {?} builder\n * @return {?}\n */\nexport function createCheckBindingField(builder: ClassBuilder): CheckBindingField {\n  const /** @type {?} */ bindingId = `${builder.fields.length}`;\n  const /** @type {?} */ fieldExpr = createBindFieldExpr(bindingId);\n  // private is fine here as no child view will reference the cached value...\n  builder.fields.push(new o.ClassField(fieldExpr.name, null, [o.StmtModifier.Private]));\n  builder.ctorStmts.push(o.THIS_EXPR.prop(fieldExpr.name).set(o.literal(undefined)).toStmt());\n  return new CheckBindingField(fieldExpr, bindingId);\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createBindFieldExpr(bindingId: string): o.ReadPropExpr {\n  return o.THIS_EXPR.prop(`_expr_${bindingId}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isFirstViewCheck(view: o.Expression): o.Expression {\n  return o.not(view.prop('numberOfChecks'));\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}