{"version":3,"file":"message_bundle.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/i18n/message_bundle.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseError} from '../parse_util';\n\nimport {extractMessages} from './extractor_merger';\nimport * as i18n from './i18n_ast';\nimport {PlaceholderMapper, Serializer} from './serializers/serializer';\n/**\n * A container for message extracted from the templates.\n */\nexport class MessageBundle {\nprivate _messages: i18n.Message[] = [];\n/**\n * @param {?} _htmlParser\n * @param {?} _implicitTags\n * @param {?} _implicitAttrs\n */\nconstructor(\nprivate _htmlParser: HtmlParser,\nprivate _implicitTags: string[],\nprivate _implicitAttrs: {[k: string]: string[]}) {}\n/**\n * @param {?} html\n * @param {?} url\n * @param {?} interpolationConfig\n * @return {?}\n */\nupdateFromTemplate(html: string, url: string, interpolationConfig: InterpolationConfig):\n      ParseError[] {\n    const /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n\n    if (htmlParserResult.errors.length) {\n      return htmlParserResult.errors;\n    }\n\n    const /** @type {?} */ i18nParserResult = extractMessages(\n        htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n\n    if (i18nParserResult.errors.length) {\n      return i18nParserResult.errors;\n    }\n\n    this._messages.push(...i18nParserResult.messages);\n  }\n/**\n * @return {?}\n */\ngetMessages(): i18n.Message[] { return this._messages; }\n/**\n * @param {?} serializer\n * @return {?}\n */\nwrite(serializer: Serializer): string {\n    const /** @type {?} */ messages: {[id: string]: i18n.Message} = {};\n    const /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n\n    // Deduplicate messages based on their ID\n    this._messages.forEach(message => {\n      const /** @type {?} */ id = serializer.digest(message);\n      if (!messages.hasOwnProperty(id)) {\n        messages[id] = message;\n      }\n    });\n\n    // Transform placeholder names using the serializer mapping\n    const /** @type {?} */ msgList = Object.keys(messages).map(id => {\n      const /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n      const /** @type {?} */ src = messages[id];\n      const /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n      return new i18n.Message(nodes, {}, {}, src.meaning, src.description, id);\n    });\n\n    return serializer.write(msgList);\n  }\n}\n\nfunction MessageBundle_tsickle_Closure_declarations() {\n/** @type {?} */\nMessageBundle.prototype._messages;\n/** @type {?} */\nMessageBundle.prototype._htmlParser;\n/** @type {?} */\nMessageBundle.prototype._implicitTags;\n/** @type {?} */\nMessageBundle.prototype._implicitAttrs;\n}\n\nclass MapPlaceholderNames extends i18n.CloneVisitor {\n/**\n * @param {?} nodes\n * @param {?} mapper\n * @return {?}\n */\nconvert(nodes: i18n.Node[], mapper: PlaceholderMapper): i18n.Node[] {\n    return mapper ? nodes.map(n => n.visit(this, mapper)) : nodes;\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, mapper: PlaceholderMapper): i18n.TagPlaceholder {\n    const /** @type {?} */ startName = mapper.toPublicName(ph.startName);\n    const /** @type {?} */ closeName = ph.closeName ? mapper.toPublicName(ph.closeName) : ph.closeName;\n    const /** @type {?} */ children = ph.children.map(n => n.visit(this, mapper));\n    return new i18n.TagPlaceholder(\n        ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, mapper: PlaceholderMapper): i18n.Placeholder {\n    return new i18n.Placeholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, mapper: PlaceholderMapper): i18n.IcuPlaceholder {\n    return new i18n.IcuPlaceholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n  }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}