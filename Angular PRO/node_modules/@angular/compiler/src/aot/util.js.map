{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/aot/util.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,IAAM,gBAAgB,CAAC,uBAAuB,GAAG,kCAAkC,CAAC;AACpF,IAAM,gBAAgB,CAAC,UAAU,GAAG,eAAe,CAAC;AACpD;;;GAGG;AACH,kCAAkC,QAAgB;IAChD,IAAM,gBAAgB,CAAC,aAAa,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;IACvE,MAAM,CAAI,aAAa,CAAC,CAAC,CAAC,kBAAa,aAAa,CAAC,CAAC,CAAG,CAAC;AAC5D,CAAC;AACD;;;GAGG;AACH,+BAA+B,QAAgB;IAC7C,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;AAC3C,CAAC;AACD;;;GAGG;AACH,gCAAgC,QAAgB;IAC9C,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACnC,CAAC;AACD;;;GAGG;AACH,sCAAsC,IAAY;IAChD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,IAAM,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAEvD,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACpB,CAAC;AACD;;;GAGG;AACH,gCAAgC,QAAgB;IAC9C,IAAM,gBAAgB,CAAC,qBAAqB,GAAG,QAAQ,CAAC,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;IAC7F,MAAM,CAAI,qBAAqB,oBAAiB,CAAC;AACnD,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst /** @type {?} */ STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nconst /** @type {?} */ NG_FACTORY = /\\.ngfactory\\./;\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function ngfactoryFilePath(filePath: string): string {\n  const /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath);\n  return `${urlWithSuffix[0]}.ngfactory${urlWithSuffix[1]}`;\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function stripNgFactory(filePath: string): string {\n  return filePath.replace(NG_FACTORY, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function isNgFactoryFile(filePath: string): boolean {\n  return NG_FACTORY.test(filePath);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nexport function splitTypescriptSuffix(path: string): string[] {\n  if (path.endsWith('.d.ts')) {\n    return [path.slice(0, -5), '.ts'];\n  }\n\n  const /** @type {?} */ lastDot = path.lastIndexOf('.');\n\n  if (lastDot !== -1) {\n    return [path.substring(0, lastDot), path.substring(lastDot)];\n  }\n\n  return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nexport function summaryFileName(fileName: string): string {\n  const /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n  return `${fileNameWithoutSuffix}.ngsummary.json`;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}